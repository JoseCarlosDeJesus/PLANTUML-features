@startsalt featuredefinitive
{
    'the functions that can be in the pegjs must have doublequotes

    !unquoted procedure $mandatory($namecomponent,$multiline, $leftbracket, $midlelement, $rightbracket)
    !if ($multiline==1)
         $leftbracket %newline() $midlelement $rightbracket
    !else
        $leftbracket $midlelement $rightbracket
    !endif    
    !endprocedure

    !unquoted procedure $optional($namecomponent,$multiline, $leftbracket, $midlelement, $rightbracket, $rule)
        !if ($rule==1)
            $mandatory($multiline, $leftbracket, $midlelement, $rightbracket) 
        !endif
    !endprocedure

    !unquoted procedure $alternative($namecomponent,$multiline,$leftbracket, $midlelement, $rightbracket, $rule, $namealternative, $leftalternative,$midlealternative,$rightalternative,$multialternative)
        !if ($rule==0) 
             $mandatory($multiline, $leftbracket, $midlelement, $rightbracket)
        !elseif ($rule==1)
            $mandatory($multialternative, $leftalternative, $midlealternative, $rightalternative)   
        !endif 
    !endprocedure

    'this is the json functions made only for use in salt, not in the pegjs

    !procedure $mandatoryJson($json)
    !if ($json.multiline==1)
         $json.leftbracket %newline() $json.midlelement $json.rightbracket
    !else
        $json.leftbracket $json.midlelement $json.rightbracket
    !endif    
    !endprocedure

    !procedure $optionalJson($json)
        !if ($json.rule==1)
            $mandatoryJson($json) 
        !endif
    !endprocedure

     !procedure $alternativeJson($json)
        !if ($json.rule==0) 
             $mandatoryJson($json)
        !elseif ($json.rule==1)
            $mandatory($json.multialternative, $json.leftalternative, $json.midlealternative, $json.rightalternative)   
        !endif 
    !endprocedure

    'this part is json with the pegjs support, note that in mandatoryJson i use the name of the
    'variable as the namecomponent

    !procedure $optionalJson($json,$rule)
        !if ($json.rule==1)
            $mandatoryJson($json) 
        !endif
    !endprocedure

     !procedure $alternativeJson($json,$namealternative,$rule)
        !if ($json.rule==0) 
             $mandatoryJson($json)
        !elseif ($json.rule==1)
            $mandatory($json.multialternative, $json.leftalternative, $json.midlealternative, $json.rightalternative)   
        !endif 
    !endprocedure

    !unquoted procedure $mandatoryJsonInput($json)
        "$json.midlelement"
    !endprocedure

     !unquoted procedure $alternativeJsonInput($json,$namealternative,$rule)
        !if ($json.rule==0) 
             $mandatoryInput($json.midlelement)
        !elseif ($json.rule==1)
            $mandatoryInput($json.midlealternative)   
        !endif 
    !endprocedure

    !unquoted procedure $optionalJsonInput($json,$rule)
        !if ($json.rule==1)
            $mandatoryInput($json.midlelement) 
        !endif
    !endprocedure


    'this part is without the namecomponent parameter, use for salt only without
    'worrying with the precompiler(pegjs) part

    !unquoted procedure $mandatory($multiline, $leftbracket, $midlelement, $rightbracket)
    !if ($multiline==1)
         $leftbracket %newline() $midlelement $rightbracket
    !else
        $leftbracket $midlelement $rightbracket
    !endif    
    !endprocedure

     !unquoted procedure $optional($multi, $leftbracket, $midlelement, $rightbracket, $aparecer)
        !if ($aparecer==1)
            $mandatory($multi, $leftbracket, $midlelement, $rightbracket) 
        !endif
    !endprocedure

    !unquoted procedure $alternative($multi,$leftbracket, $midlelement, $rightbracket, $plataforma, $leftalternative,$midlealternative,$rightalternative, $multialternative)
        !if ($plataforma==0) 
             $mandatory($multi, $leftbracket, $midlelement, $rightbracket)
        !elseif ($plataforma==1)
            $mandatory($multialternative, $leftalternative, $midlealternative, $rightalternative)   
        !endif 
    !endprocedure

    'this part is to facilitate the use of the input widget in salt using the functions predefinided
    'these can be used in pegjs

    !unquoted procedure $mandatoryInput($namecomponent,$midlelement)
        "$midlelement"
    !endprocedure

    !unquoted procedure $optionalInput($namecomponent,$midlelement,$rule)
        !if ($rule==1)
            $mandatoryInput($midlelement) 
        !endif
    !endprocedure

    !unquoted procedure $alternativeInput($namecomponent,$midlelement,$rule,$midlealternative,$namealternative)
        !if ($rule==0) 
             $mandatoryInput($midlelement)
        !elseif ($rule==1)
            $mandatoryInput($midlealternative)   
        !endif 
    !endprocedure

    'this part is to the input widget in salt , for salt use only

    !unquoted procedure $mandatoryInput($midlelement)
        "$midlelement"
    !endprocedure

    !unquoted procedure $optionalInput($midlelement, $aparecer)
        !if ($aparecer==1)
            $mandatoryInput($midlelement) 
        !endif
    !endprocedure

    !unquoted procedure $alternativeInput($midlelement, $plataforma, $midlealternative)
        !if ($plataforma==0) 
             $mandatoryInput($midlelement)
        !elseif ($plataforma==1)
            $mandatoryInput($midlealternative)   
        !endif 
    !endprocedure

}
@endsalt